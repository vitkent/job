a,body{color:#000}ol,ul li{margin-bottom:0}hr,td,th{background:0 0}.table,input,select,td,textarea,th{border:1px solid #ddd}.clearfix,.label,form,input,label,select,textarea{zoom:1;position:relative}body,html{-webkit-text-size-adjust:100%;height:100%;background-color:#fff}.clear,svg:not(:root){overflow:hidden}@font-face{font-family:Roboto;font-style:normal;font-weight:400;font-display:swap;src:url(../fonts/roboto.woff) format("woff"),url(../fonts/roboto.woff2) format("woff2")}*,:after,:before{box-sizing:border-box}blockquote,body,q{font-size:14px;padding:0}body{font-family:Roboto;vertical-align:top;line-height:20px}img{max-width:100%;height:auto}a{text-decoration:none;outline:0;background-color:transparent}.no-touchevents a:hover,.touchevents a:active{color:#ddd}h1,h2,h3,h4,h5,h6{margin:0;color:#000;font-size:22px;font-weight:400}hr,input[type=file]{display:block;position:relative}hr{border:none;border-bottom:1px solid #ddd;line-height:0;font-size:0;margin:15px 0}.table,ul{margin:0}ul li{list-style:disc inside}img,legend{border:0}td,th{text-align:left;padding:0}blockquote,q{border:none;line-height:24px;margin:0 auto;text-align:center;text-transform:uppercase}.clear{clear:both;height:1px;line-height:1px;margin-top:-1px}pre,textarea{overflow:auto}.label,form,label{display:block;clear:both}.label,label{font-weight:400;width:100%;margin:0}input,select,textarea{background:#fff;box-shadow:none;display:block;width:100%;vertical-align:top;outline:0}input[type=file]{margin:0}textarea{height:auto;resize:vertical}select{padding:0}::-webkit-input-placeholder{color:#000;opacity:1}:-moz-placeholder,::-moz-placeholder{color:#000;opacity:1}:-ms-input-placeholder{color:#000;opacity:1}@font-face{font-family:icons;src:url(../fonts/icons.eot);src:url(../fonts/icons.eot?#iefix) format('eot'),url(../fonts/icons.woff2) format('woff2'),url(../fonts/icons.woff) format('woff'),url(../fonts/icons.ttf) format('truetype'),url(../fonts/icons.svg#icons) format('svg');font-display:swap}.icon-base-pseudo,.icon-sort:before{font-family:icons;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-style:normal;font-variant:normal;font-weight:400;text-decoration:none;text-transform:none}.icon-sort:before{content:"\E001"}
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html{font-family:sans-serif;-ms-text-size-adjust:100%}body,p{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{padding:0}table{border-collapse:collapse;border-spacing:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
